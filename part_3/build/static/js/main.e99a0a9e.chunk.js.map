{"version":3,"sources":["App.js","index.js"],"names":["Form","props","react_default","a","createElement","name","value","newName","onChange","handler","newNum","type","onClick","onSubmit","Entries","persons","map","person","key","id","number","removeEntry","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","console","log","data","setState","catch","err","handleChange","event","defineProperty","target","handleSubmit","preventDefault","state","filter","length","alert","post","concat","toConsumableArray","handleRemove","currentPerson","find","window","confirm","delete","oldPersons","index","indexOf","splice","App_Form","App_Entries","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e99a0a9e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n      <form>\r\n        <div>\r\n          nimi: <input name=\"newName\" value={props.newName} onChange={props.handler} />\r\n        </div>\r\n        <div>\r\n          numero: <input name=\"newNum\" value={props.newNum} onChange={props.handler} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={props.onSubmit}>lisää</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Entries = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>Numerot</h2>\r\n      <table>\r\n        <thead></thead>\r\n        <tbody>\r\n          {props.persons.map(person =>\r\n            <tr key={person.id}>\r\n              <td>{person.name}</td>\r\n              <td>{person.number}</td>\r\n              <td><button onClick={() => props.removeEntry(person.id)}>Poista</button></td>\r\n            </tr>\r\n          )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      persons: [],\r\n      newName: '',\r\n      newNum: '',\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    axios.get('http://localhost:3001/api/persons')\r\n      .then(res => {\r\n        console.log(res.data)\r\n        this.setState({\r\n          persons: res.data\r\n        })\r\n      }\r\n      ).catch(err => { console.log(err) })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.persons.filter(person => person.name === this.state.newName).length > 0) {\r\n      alert(\"Tämä henkilö löytyy jo luettelosta!\");\r\n    } else if (this.state.newName === \"\" || this.state.newNum === \"\") {\r\n      alert(\"Kentät eivät voi olla tyhjiä!\")\r\n    }\r\n    else {\r\n      //setting the new id to current date in milliseconds + the length of the array to avoid overlapping if old entries are removed\r\n      axios.post('http://localhost:3001/api/persons', {\r\n        name: this.state.newName,\r\n        number: this.state.newNum,\r\n      }).then(res => {\r\n        this.setState({\r\n          persons: [...this.state.persons, res.data],\r\n          newName: \"\",\r\n          newNum: \"\",\r\n        })\r\n      })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n  handleRemove = (id) => {\r\n    const currentPerson = this.state.persons.find(person => person.id === id);\r\n    console.log(id)\r\n    if (window.confirm('Poistetaanko ' + currentPerson.name + '?')) {\r\n      axios.delete('http://localhost:3001/api/persons/' + id)\r\n        .then(res => {\r\n          const oldPersons = [...this.state.persons];\r\n          const index = oldPersons.indexOf(currentPerson);\r\n          if (index !== -1) {\r\n            oldPersons.splice(index, 1);\r\n            this.setState({ persons: oldPersons });\r\n          }\r\n        })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form newName={this.state.newName} newNum={this.state.newNum} handler={this.handleChange} onSubmit={this.handleSubmit} />\r\n        <Entries persons={this.state.persons} removeEntry={this.handleRemove} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}